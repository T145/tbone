
import de.undercouch.gradle.tasks.download.Download
import com.palantir.gradle.gitversion.VersionDetails

buildscript {
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'de.undercouch.download' version '3.4.3'
    id 'com.palantir.git-version' version '0.11.0'
    //id 'com.matthewprenger.cursegradle' version '1.2.0'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'net.minecraftforge.gradle.forge'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
    jcenter()
    maven { url = 'http://files.minecraftforge.net/maven' }
    maven { url = 'https://minecraft.curseforge.com/api/maven' }
}

version = "${gitVersion()}+mc${project.minecraft_version}"
group = mod_group
archivesBaseName = mod_name

final String FORGE = "${project.minecraft_version}-${project.forge_version}"

minecraft {
    runDir = 'run'
    version = FORGE
    mappings = forge_mapping
    makeObfSourceJar = false

    replaceIn "${mod_name}.java"
    replace "@VERSION@", project.version
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
}

processResources {
    exclude '**/*.db'
    exclude '**/*.DS_Store'
}

jar {
    from 'LICENSE'
}

task setupEclipseWorkspace(type: Download, dependsOn: setupDecompWorkspace) {
    File forgeArchive = project.file('forge.zip')

    src "http://files.minecraftforge.net/maven/net/minecraftforge/forge/${FORGE}/forge-${FORGE}-mdk.zip"
    dest forgeArchive

    doLast {
        project.copy {
            from zipTree(forgeArchive)
            into 'forge'
        }

        project.file('forge/eclipse').renameTo(project.file('eclipse'))
        project.file('forge.zip').delete()
        project.file('forge').deleteDir()
    }
}

task migrateSource() {
    project.file('build/tmp/recompileMc/sources').renameTo(project.file('minecraftSrc'))
}

migrateSource.mustRunAfter eclipse

build {
    doLast {
        project.file('release').deleteDir()
        project.file('build/libs').renameTo(project.file('release'))
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = "javadoc"
	from javadoc.destinationDir
}

task devJar(type: Jar) {
    from sourceSets.main.output
    from 'LICENSE'
    classifier = 'deobf'
}

task srcJar(type: Jar) {
    from sourceSets.main.allJava
    from sourceSets.api.allJava
    classifier = 'sources'
}

task apiJar(type: Jar) {
	classifier = "api"
	from sourceSets.api.output

	// TODO: when FG bug is fixed, remove allJava from the api jar.
	// https://github.com/MinecraftForge/ForgeGradle/issues/369
	// Gradle should be able to pull them from the -sources jar.
	from sourceSets.api.allJava
}

artifacts {
    archives devJar
    archives srcJar
    archives apiJar
    //archives javadocJar
}
